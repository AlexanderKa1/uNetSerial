
Allocating common symbols
Common symbol       size              file

intime              0x2               nboot.o
marker              0x2               nboot.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD nboot.o
                0x000010ff                __stack = 0x10ff
Address of section .text set to 0xe000

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000e000      0x3de
 *(.vectors)
                0x0000e000                __ctors_start = .
 *(.ctors)
                0x0000e000                __ctors_end = .
                0x0000e000                __dtors_start = .
 *(.dtors)
                0x0000e000                __dtors_end = .
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000e000                . = ALIGN (0x2)
 *(.init0)
 *(.init1)
 *(.init2)
 *(.init3)
 *(.init4)
 *(.init5)
 *(.init6)
 *(.init7)
 *(.init8)
 *(.init9)
 *(.text)
 .text          0x0000e000      0x3de nboot.o
                0x0000e00c                crcadd
                0x0000e056                main
                0x0000e000                start
                0x0000e3de                . = ALIGN (0x2)
 *(.text.*)
                0x0000e3de                . = ALIGN (0x2)
 *(.fini9)
 *(.fini8)
 *(.fini7)
 *(.fini6)
 *(.fini5)
 *(.fini4)
 *(.fini3)
 *(.fini2)
 *(.fini1)
 *(.fini0)
                0x0000e3de                _etext = .

.data           0x00800100        0x0 load address 0x0000e3de
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x4
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 *(COMMON)
 COMMON         0x00800100        0x4 nboot.o
                                  0x0 (size before relaxing)
                0x00800100                intime
                0x00800102                marker
                0x00800104                PROVIDE (__bss_end, .)
                0x0000e3de                __data_load_start = LOADADDR (.data)
                0x0000e3de                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800104        0x0
                0x00800104                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800104                PROVIDE (__noinit_end, .)
                0x00800104                _end = .
                0x00800104                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0 load address 0x0000e3de
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(nboot64.elf elf32-avr)

Cross Reference Table

Symbol                                            File
__do_clear_bss                                    nboot.o
__do_copy_data                                    nboot.o
__stack                                           nboot.o
crcadd                                            nboot.o
intime                                            nboot.o
main                                              nboot.o
marker                                            nboot.o
start                                             nboot.o
